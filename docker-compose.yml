version: '3.4'

services:
    proxy:
        build: 
            context: ./proxy
            dockerfile: Dockerfile
        environment:
            PROXY_HOST: ${PROXY_HOST}
        ports:
            - "${PROXY_PORT}:80"
        restart: unless-stopped
        networks:
            - frontend
            - backend

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        depends_on:
            - proxy
            - backend
        networks:
            - frontend

    backend:
        build: 
            context: ./backend
            dockerfile: Dockerfile
        environment:
            PROXY_HOST: ${PROXY_HOST}
            MYSQL_HOST: ${MYSQL_HOST}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            BACKEND_ROADRUNNER_WORKERS: ${BACKEND_ROADRUNNER_WORKERS}
            BACKEND_ROADRUNNER_DEBUG: ${BACKEND_ROADRUNNER_DEBUG}
            BACKEND_CORS_ALLOWED_ORIGIN: ${BACKEND_CORS_ALLOWED_ORIGIN}
            BACKEND_CORS_ALLOWED_HEADERS: ${BACKEND_CORS_ALLOWED_HEADERS}
            BACKEND_CORS_ALLOWED_METHODS: ${BACKEND_CORS_ALLOWED_METHODS}
            AUTHORIZATION_TOKEN_KEY: ${AUTHORIZATION_TOKEN_KEY}
        depends_on:
            - proxy
            - db
        restart: unless-stopped
        networks:
            - backend
        volumes:
            - ./log:/app/log
            #- ./backend/migrations:/app/migrations
            #- ./backend:/appdo

    db:
        image: mariadb:10.11
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        networks:
            - backend
        volumes:
            - db_data:/var/lib/mysql

networks:
    frontend:
        name: frontend
    backend:
        name: backend

volumes:
    db_data:
        name: db_data
